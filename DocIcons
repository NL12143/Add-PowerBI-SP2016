6485 in AutoSPInstallerFunctions.ps1

        # Perform the rest of the DOCICON.XML modifications to allow PDF edit etc., and write out the new DOCICON.XML file
        Try
        {
            $date = Get-Date -UFormat "%y%m%d%H%M%S"
            Write-Host -ForegroundColor White " - Creating backup of DOCICON.XML file..."
            $backupFile = "$docIconFolderPath\DOCICON_Backup_$date.xml"
            Copy-Item $docIconFilePath $backupFile
            Write-Host -ForegroundColor White " - Writing new DOCICON.XML..."
            if (!$pdf) {$pdf = $xml.SelectSingleNode("//Mapping[@Key='pdf']")}
            if (!$pdf) {$pdf = $xml.CreateElement("Mapping")}
            $pdf.SetAttribute("EditText","Adobe Acrobat or Reader X")
            $pdf.SetAttribute("OpenControl","AdobeAcrobat.OpenDocuments")
            $xml.DocIcons.ByExtension.AppendChild($pdf) | Out-Null
            $xml.Save($docIconFilePath)
            Write-Host -ForegroundColor White " - Restarting IIS..."
            iisreset
        }


6226 in AutoSPInstallerFunctions.ps1

    If ($xmlinput.Configuration.AdobePDF.MIMEType.Configure -eq $true)
    {
        # Add the PDF MIME type to each web app so PDFs can be directly viewed/opened without saving locally first
        # More granular and generally preferable to setting the whole web app to "Permissive" file handling
        $mimeType = "application/pdf"
        Write-Host -ForegroundColor White " - Adding PDF MIME type `"$mimeType`" web apps..."
        Load-SharePoint-PowerShell
        ForEach ($webAppConfig in $xmlinput.Configuration.WebApplications.WebApplication)
        {
            $webAppUrl = $(($webAppConfig.url).TrimEnd("/"))+":"+$($webAppConfig.Port)
            $webApp = Get-SPWebApplication -Identity $webAppUrl
            If ($webApp.AllowedInlineDownloadedMimeTypes -notcontains $mimeType)
            {
                Write-Host -ForegroundColor White "  - "$webAppUrl": Adding "`"$mimeType"`"..." -NoNewline
                $webApp.AllowedInlineDownloadedMimeTypes.Add($mimeType)
                $webApp.Update()
                Write-Host -ForegroundColor White "OK."
            }
            Else
            {
                Write-Host -ForegroundColor White "  - "$webAppUrl": "`"$mimeType"`" already added."
            }
        }



        
